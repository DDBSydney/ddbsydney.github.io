// -------------------------------------
//   Base - Typography
// -------------------------------------
/**
  * @name typography
  * @desc Used for setting various font properties
          used with common elements that spread
          across the entire app.
**/

// -------------------------------------
//   Typography - Font Size
// -------------------------------------
// based on tags
// font size - h1
$font_size_h1:     42px; // base
$font_size_h1_tab: 37px; // tablet
$font_size_h1_mob: 32px; // mobile

// font size - h2
$font_size_h2:     32px; // base
$font_size_h2_tab: 29px; // tablet
$font_size_h2_mob: 26px; // mobile

// font size - h3
$font_size_h3:     28px; // base
$font_size_h3_tab: 25px; // tablet
$font_size_h3_mob: 22px; // mobile

// font size - h4
$font_size_h4:     24px; // base
$font_size_h4_tab: 22px; // tablet
$font_size_h4_mob: 18px; // mobile

// font size - h5
$font_size_h5:     18px; // base
$font_size_h5_tab: 17px; // tablet
$font_size_h5_mob: 16px; // mobile

// font size - h6
$font_size_h6:     16px; // base
$font_size_h6_tab: 15px; // tablet
$font_size_h6_mob: 14px; // mobile

// font size - p
$font_size_p:     14px; // base
$font_size_p_tab: 13px; // tablet
$font_size_p_mob: 12px; // mobile

// based on size
// font size - xs
$font_size_xs:     $font_size_p * 0.85;     // base
$font_size_xs_tab: $font_size_p_tab * 0.85; // tablet
$font_size_xs_mob: $font_size_p_mob * 0.85; // mobile

// font size - lg
$font_size_lg:     $font_size_h1 * 1.285;     // base
$font_size_lg_tab: $font_size_h1_tab * 1.285; // tablet
$font_size_lg_mob: $font_size_h1_mob * 1.285; // mobile

// map of available
// typography sizes
$font-size: (
  // based on tags
  "h1":     $font_size_h1,     // base
  "h1_tab": $font_size_h1_tab, // tablet
  "h1_mob": $font_size_h1_mob, // mobile

  "h2":     $font_size_h2,     // base
  "h2_tab": $font_size_h2_tab, // tablet
  "h2_mob": $font_size_h2_mob, // mobile

  "h3":     $font_size_h3,     // base
  "h3_tab": $font_size_h3_tab, // tablet
  "h3_mob": $font_size_h3_mob, // mobile

  "h4":     $font_size_h4,     // base
  "h4_tab": $font_size_h4_tab, // tablet
  "h4_mob": $font_size_h4_mob, // mobile

  "h5":     $font_size_h5,     // base
  "h5_tab": $font_size_h5_tab, // tablet
  "h5_mob": $font_size_h5_mob, // mobile

  "h6":     $font_size_h6,     // base
  "h6_tab": $font_size_h6_tab, // tablet
  "h6_mob": $font_size_h6_mob, // mobile

  "p":     $font_size_p,     // base
  "p_tab": $font_size_p_tab, // tablet
  "p_mob": $font_size_p_mob, // mobile

  // based on size
  "xs":     $font_size_xs,     // base
  "xs_tab": $font_size_xs_tab, // tablet
  "xs_mob": $font_size_xs_mob, // mobile

  "lg":     $font_size_lg,     // base
  "lg_tab": $font_size_lg_tab, // tablet
  "lg_mob": $font_size_lg_mob  // mobile
);

// function to get the font size
// for the given key ( default otherwise )
@function get-font--size($key: "p", $mult : 1) {
  // throw a warning and error if the key is invalid
  @if not map-has-key($font-size, $key) {
    @warn "$key not found for @function get-font--size($key)";
    @error "$key not found for @function get-font--size($key)";
  }

  // return the correct padding if the key is valid
  @return (map-get($font-size, $key)) * $mult;
}

// -------------------------------------
//   Typography - Line Height
// -------------------------------------
// based on tags
$line_height_h1: 1.26em;
$line_height_h2: 1.26em;
$line_height_h3: 1.33em;
$line_height_h4: 1.33em;
$line_height_h5: 1.72em;
$line_height_h6: 1.72em;
$line_height_p:  1.72em;

// based on size
$line_height_xs: $line_height_p;
$line_height_lg: $line_height_h1 * 1.285;

// map of available
// typography heights
$line-height: (
  // based on tags
  "h1": $line_height_h1, "h2": $line_height_h2,
  "h3": $line_height_h3, "h4": $line_height_h4,
  "h5": $line_height_h5, "h6": $line_height_h6,
  "p" : $line_height_p,

  // based on size
  "xs": $line_height_xs, "lg": $line_height_lg
);

// function to get the line height
// for the given key ( default otherwise )
@function get-line--height($key: "p") {
  // throw a warning and error if the key is invalid
  @if not map-has-key($line-height, $key) {
    @warn "$key not found for @function get-line--height($key)";
    @error "$key not found for @function get-line--height($key)";
  }

  // return the correct padding if the key is valid
  @return map-get($line-height, $key);
}

// -------------------------------------
//   Typography - Font Family
// -------------------------------------
// based on weight
$font_family_regular: "Helvetica Neue 55 Roman",  Helvetica, sans-serif;
$font_family_medium:  "Helvetica Neue 65 Medium", Helvetica, sans-serif;
$font_family_bold:    "Helvetica Neue 75 Bold",   Helvetica, sans-serif;

// based on tags
$font_family_h1: $font_family_bold;
$font_family_h2: $font_family_medium;
$font_family_h3: $font_family_regular;
$font_family_h4: $font_family_regular;
$font_family_h5: $font_family_regular;
$font_family_h6: $font_family_regular;
$font_family_p:  $font_family_regular;

// based on size
$font_family_xs: $font_family_regular;
$font_family_lg: $font_family_bold;

// map of available
// typography families
$font-family: (
  // based on tags
  "h1": $font_family_h1, "h2": $font_family_h2,
  "h3": $font_family_h3, "h4": $font_family_h4,
  "h5": $font_family_h5, "h6": $font_family_h6,
  "p" : $font_family_p,

  // based on size
  "xs": $font_family_xs, "lg": $font_family_lg
);

// function to get the font family
// for the given key ( default otherwise )
@function get-font--family($key: "p") {
  // throw a warning and error if the key is invalid
  @if not map-has-key($font-family, $key) {
    @warn "$key not found for @function get-font--family($key)";
    @error "$key not found for @function get-font--family($key)";
  }

  // return the correct padding if the key is valid
  @return map-get($font-family, $key);
}

// -------------------------------------
//   Typography - Font Weights
// -------------------------------------
// font-weight is no longer used to determine
// the weight of the font, use the appropriate
// font-family value instead (as specified above)
$font_weight_bold   : normal /* 700 */;
$font_weight_sbold  : normal /* 600 */;
$font_weight_medium : normal /* 500 */;
$font_weight_regular: normal /* 400 */;
$font_weight_light  : normal /* 300 */;
$font_weight_thin   : normal /* 200 */;

// based on tags
$font_weight_h1: $font_weight_bold;
$font_weight_h2: $font_weight_medium;
$font_weight_h3: $font_weight_regular;
$font_weight_h4: $font_weight_regular;
$font_weight_h5: $font_weight_regular;
$font_weight_h6: $font_weight_regular;
$font_weight_p : $font_weight_regular;

// based on size
$font_weight_xs: $font_weight_regular;
$font_weight_lg: $font_weight_bold;

// map of available
// typography weights
$font-weight: (
  // based on tags
  "h1": $font_weight_h1, "h2": $font_weight_h2,
  "h3": $font_weight_h3, "h4": $font_weight_h4,
  "h5": $font_weight_h5, "h6": $font_weight_h6,
  "p" : $font_weight_p,

  // based on size
  "xs": $font_weight_xs, "lg": $font_weight_lg
);

// function to get the font weight
// for the given key ( default otherwise )
@function get-font--weight($key: "p") {
  // throw a warning and error if the key is invalid
  @if not map-has-key($font-weight, $key) {
    @warn "$key not found for @function get-font--weight($key)";
    @error "$key not found for @function get-font--weight($key)";
  }

  // return the correct padding if the key is valid
  @return map-get($font-weight, $key);
}

// -------------------------------------
//   Typography - Letter Spacing
// -------------------------------------
// based on tags
$letter_spacing_h1: 1.26px;
$letter_spacing_h2: 1.26px;
$letter_spacing_h3: 1px;
$letter_spacing_h4: 1px;
$letter_spacing_h5: 1px;
$letter_spacing_h6: 1px;
$letter_spacing_p : 1px;

// based on size
$letter_spacing_xs: $letter_spacing_p;
$letter_spacing_lg: $letter_spacing_h1;

// map of available
// typography spacings
$letter-spacing: (
  // based on tags
  "h1": $letter_spacing_h1, "h2": $letter_spacing_h2,
  "h3": $letter_spacing_h3, "h4": $letter_spacing_h4,
  "h5": $letter_spacing_h5, "h6": $letter_spacing_h6,
  "p" : $letter_spacing_p,

  // based on size
  "xs": $letter_spacing_xs, "lg": $letter_spacing_lg
);

// function to get the letter spacing
// for the given key ( default otherwise )
@function get-letter--spacing($key: "p") {
  // throw a warning and error if the key is invalid
  @if not map-has-key($letter-spacing, $key) {
    @warn "$key not found for @function get-letter--spacing($key)";
    @error "$key not found for @function get-letter--spacing($key)";
  }

  // return the correct padding if the key is valid
  @return map-get($letter-spacing, $key);
}

// ------------------------------------
//   Typography - Mixins
// ------------------------------------
// mixin - font - size
@mixin font--size($size: "p", $mult: 1) {
  font-size: get-font--size($size, $mult);
  @include tablet { font-size: get-font--size(#{$size + "_tab"}, $mult); }
  @include mobile { font-size: get-font--size(#{$size + "_mob"}, $mult); }
}

// mixin - line - height
@mixin line--height($size: "p") {
  line-height: get-line--height($size);
}

// mixin - font - family
@mixin font--family($size: "p") {
  font-family: get-font--family($size);
}

// mixin - font - weight
@mixin font--weight($size: "p") {
  font-weight: get-font--weight($size);
}

// mixin - letter - spacing
@mixin letter--spacing($size: "p") {
  letter-spacing: get-letter--spacing($size);
}

// mixin - font - style
@mixin font--style($size: "p", $mult: 1) {
  font-smoothing: antialiased;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: antialiased;

  @include font--size($size, $mult); @include line--height($size);
  @include font--family($size); @include font--weight($size);
  @include letter--spacing($size);
}

// ------------------------------------
//   Typography - Tags
// ------------------------------------
h1 { @include font--style("h1"); }
h2 { @include font--style("h2"); }
h3 { @include font--style("h3"); }
h4 { @include font--style("h4"); }
h5 { @include font--style("h5"); }
h6 { @include font--style("h6"); }

html, body, ul, ol, li,
p, a { @include font--style("p"); }

span, i {
  font-family: inherit; font-weight: inherit;
  font-size: inherit; line-height: inherit;
  letter-spacing: inherit; color: inherit;
}

h1, h2, h3, h4, h5, h6, ul, ol, li, p, a {
  color: white;
  &:first-child { margin-top: 0; }
  &:last-child  { margin-bottom: 0; }
}

h1, h2, h3, h4, h5,
h6, ul, ol, li, p {
  a {
    font-family: inherit; font-weight: inherit;
    font-size: inherit; line-height: inherit;
    letter-spacing: inherit; color: inherit;
  }
}

ul, ol {
  padding-left: 1em;

  li {
    margin-top: 0.25em;
    padding-left: 0.25em;
    &:first-child { margin-top: 0; }
    &:last-child  { margin-bottom: 0; }
  }
}

a {
  @include transitions(color);
  text-decoration: none;
  outline: 0;

  &:hover, &:active, { color: white; }
  &:hover, &:focus, &:active { outline: 0; }
}

// ------------------------------------
//   Typography - Highlight
// ------------------------------------
$font_highlight_padding: 0.15em;
$font_highlight_margin:  0.15em;

// mixin to include styles to
// highlight the nested span tags
// ( also used in other components )
@mixin font--highlight($bgcolor: $color_yellow_ddb, $color: black) {

  span {
    display: inline-block;
    padding: 0 $font_highlight_padding;
    padding-bottom: ($font_highlight_padding / 2);

    color: $color;
    background-color: $bgcolor;
    @include line--height("h1");
  }

  br + span {
    margin: $font_highlight_margin (-$font_highlight_margin) 0;
    @include tablet-sm { margin: 0; }
    @include mobile    { margin: 0; }
  }

  br.tablet + span {
    @include tablet-sm { margin: $font_highlight_margin (-$font_highlight_margin) 0; }
    @include mobile    { margin: 0; }
  }

  br.mobile + span {
    @include mobile { margin: $font_highlight_margin (-$font_highlight_margin) 0; }
  }

  br.all + span {
    margin: 0 -$font_highlight_margin;
    @include tablet-sm { margin: $font_highlight_margin (-$font_highlight_margin) 0; }
    @include mobile    { margin: $font_highlight_margin (-$font_highlight_margin) 0; }
  }
}






