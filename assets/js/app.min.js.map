{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\n// -------------------------------------\n//   Dependencies\n// -------------------------------------\n/**\n  * @plugins\n  * require(\"jquery\");\n  * require(\"velocity\");\n  * require(\"fastclick\");\n**/\n\n// base\nrequire(\"./base/raf\");\nrequire(\"./base/print\");\nrequire(\"./base/event\");\nrequire(\"./base/query\");\nrequire(\"./base/promise\");\nrequire(\"./base/debounce\");\nrequire(\"./base/template\");\n\n// services\n/* empty block */\n\n// directives\nvar ClickableTile = require(\"./directives/clickable-tile.directive\");\n\n// components\nvar Header     = require(\"./components/header.component\");\nvar IntroTile  = require(\"./components/intro/intro-tile.component\");\nvar PromoVideo = require(\"./components/common/promo-video.component\");\n\n// controllers\n/* empty block */\n\n// config\nvar CONFIG = require(\"./config\");\nconsole.log(\"CONFIG options are:\");\nconsole.log(CONFIG);\n\n// -------------------------------------\n//   App\n// -------------------------------------\n/**\n  * @name app\n  * @desc The main js file that contains the\n          run options and functions for the app.\n**/\n\n(function($) {\n  console.log(\"app.js loaded.\");\n\n  /**\n    * @name App\n    * @desc the main class for the app\n    * @return {Object} - the instance of the app class\n  **/\n  function App() {\n    // ---------------------------------------------\n    //   Private members\n    // ---------------------------------------------\n    var _elHtml = null; // reference to the html DOM element\n    var _elBody = null; // reference to the body DOM element\n\n    var _header = null; // object to hold a refernce for the header component\n    var _introTile = null; // object to hold a refernce for the intro-tile component\n    var _promoVideos = []; // array of objects to hold references for the the promo video components\n    var _hasFastClickAttached = false; // flag to indicate if fast click was attached\n\n    // ---------------------------------------------\n    //   Public members\n    // ---------------------------------------------\n    /* empty block */\n\n    // ---------------------------------------------\n    //   Private methods\n    // ---------------------------------------------\n    // @name _attachFastClick\n    // @desc function to attach fast click to the document\n    // @param {Event} event - the event the function was dispatched from\n    function _attachFastClick(event) {\n      try { FastClick.attach(document.body); } // try to attach fast click\n      catch(error) { console.log(error); } // catch attach fast click error\n    }\n\n    // ---------------------------------------------\n    //   Public methods\n    // ---------------------------------------------\n    // @name init\n    // @desc init function to initialize the app\n    function init() {\n      console.log(\"app.js: init() called.\");\n\n      // get the html and body DOM elements\n      _elHtml = query(\"html\")[0];\n      _elBody = query(\"body\")[0];\n\n      // instantiate FastClick on the body for eliminating\n      // the 300ms delay between a physical tap and the\n      // firing of a click event on mobile browsers\n      if (!_hasFastClickAttached && \"addEventListener\" in document) {\n        document.addEventListener(\"DOMContentLoaded\", _attachFastClick, false);\n        _hasFastClickAttached = true; // set attached flag as true\n      }\n\n      // initialise the clickable tile directive\n      query(\"[clickable-tile]\").forEach(function(element, index) {\n        new ClickableTile({ element: element });\n      });\n\n      // create and intialise the header component\n      _header = new Header({ element: query(\".header\")[0] });\n\n      // create and initialise the intro-tile component\n      _introTile = new IntroTile({\n        element: query(\".intro-tile\")[0],\n        group: query(\".intro-group-tile\")[0]\n      });\n\n      // create and intialise the promo video components\n      query(\".promo-video\").forEach(function(element, index){\n        _promoVideos.push(new PromoVideo({ element: element }));\n      });\n\n      // animate fade the current page into view\n      requestAnimationFrame(function() {\n        $(_elBody).velocity(\"transition.fadeIn\", {\n          easing: \"easeInOutQuad\",\n          delay: CONFIG.animation.delay,\n          duration: CONFIG.animation.durationSlow\n        });\n      });\n    }\n\n    // @name destory\n    // @desc destory function to destroy the app\n    function destroy() { /* empty block */ }\n\n    // ---------------------------------------------\n    //   Constructor block\n    // ---------------------------------------------\n    /* empty block */\n\n    // ---------------------------------------------\n    //   Instance block\n    // ---------------------------------------------\n    return {\n      init: init, // init function for the controller\n      destroy: destroy // destory function for the controller\n    };\n  }\n\n  // ---------------------------------------------\n  //   Export block\n  // ---------------------------------------------\n  var ddbWebsite = new App();\n\n  // ---------------------------------------------\n  //   Run block\n  // ---------------------------------------------\n  ddbWebsite.init(); // initiate the created app\n\n})(jQuery);\n\n},{\"./base/debounce\":2,\"./base/event\":3,\"./base/print\":4,\"./base/promise\":5,\"./base/query\":6,\"./base/raf\":7,\"./base/template\":8,\"./components/common/promo-video.component\":9,\"./components/header.component\":10,\"./components/intro/intro-tile.component\":11,\"./config\":12,\"./directives/clickable-tile.directive\":13}],2:[function(require,module,exports){\n\"use strict\";\n\n// -------------------------------------\n//   Dependencies\n// -------------------------------------\n/** \n  * @plugins\n**/\n\n// -------------------------------------\n//   Base - Debounce\n// -------------------------------------\n/** \n  * @name debounce\n  * @desc A base module for an event that as long as it continues to be \n          invoked, will not be triggered. The function will be called after it \n          stops being called for N milliseconds. If `immediate` is passed, \n          trigger the function on the leading edge, instead of the trailing.\n**/\n\n(function() {\n  console.log(\"base/debounce.js loaded.\");\n\n  // @name debounce\n  // @desc the main function for the base\n  // @param {Function} func - the function to be executed\n  // @param {Boolean} wait - flag to indicate wait and call\n  // @param {Boolean} immediate - flag to indicate immediate call\n  function debounce(func, wait, immediate) {\n    var timeout;\n    return function() {\n      var context = this, args = arguments;\n      var later = function() {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  }\n\n  // ---------------------------------------------\n  //   Export block\n  // ---------------------------------------------\n  window.debounce = debounce;\n\n})();\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\n// -------------------------------------\n//   Dependencies\n// -------------------------------------\n/** \n  * @plugins\n**/\n\n// -------------------------------------\n//   Base - Event\n// -------------------------------------\n/** \n  * @name event\n  * @desc A base module that is used to create an event \n          interface that represents events initialized \n          by an app for any purpose.\n**/\n\n(function() {\n  console.log(\"base/event.js loaded.\");\n\n  // @name CustomEvent\n  // @desc the main function for the base\n  // @param {String} event - the name of the event\n  // @param {Object} params - the options for the event\n  // @param {Event} - the created custom event object\n  function CustomEvent ( event, params ) {\n    params = params || { bubbles: false, cancelable: false, detail: undefined };\n    var evt = document.createEvent(\"CustomEvent\");\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );\n    return evt;\n  }\n\n  // ---------------------------------------------\n  //   Export block\n  // ---------------------------------------------\n  if (typeof window.CustomEvent != \"function\") {\n    CustomEvent.prototype = window.Event.prototype; \n    window.CustomEvent = CustomEvent;\n  }\n\n})();\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\n// -------------------------------------\n//   Dependencies\n// -------------------------------------\n/** \n  * @plugins\n**/\n\n// -------------------------------------\n//   Base - Print\n// -------------------------------------\n/** \n  * @name print\n  * @desc A base module to abstract console.log done\n          to ensure that gulp tasks cannot strip \n          them out on compile. print is attached \n          to the window object.\n**/\n(function() {\n  console.log(\"base/print.js loaded.\");\n\n  // @name print\n  // @desc the main function for the base\n  // @param {String} selector\n  // @param {String} value\n  // @return {Boolean}\n  function print(value) {\n    // assign to local var \n    var print = console;\n\n    // find the key log\n    for(var key in print) {\n      if(key == \"log\"){\n         // log the value and return true\n        print[key](value); return true;\n      }\n    }\n\n    // default return \n    // value is false\n    return false;\n  }\n\n  // ---------------------------------------------\n  //   Export block\n  // ---------------------------------------------\n  window.print = print;\n    \n})();\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\n// -------------------------------------\n//   Dependencies\n// -------------------------------------\n/** \n  * @plugins\n**/\n\n// -------------------------------------\n//   Base - Promise\n// -------------------------------------\n/** \n  * @name promise\n  * @desc A base module to enable waiting for asynchronous \n          code to exceute. Simulates the behaviour of \n          ES6 Promises.\n**/\n(function() {\n  console.log(\"base/promise.js loaded.\");\n\n  // store setTimeout reference so promise-base will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var setTimeoutFunc = setTimeout;\n\n  // @name noop\n  function noop() { }\n\n  // use base for setImmediate for performance gains\n  var asap = (typeof setImmediate === \"function\" && setImmediate) ||\n    function (fn) {\n      setTimeoutFunc(fn, 1);\n    };\n  \n  // @name onUnhandledRejection\n  var onUnhandledRejection = function onUnhandledRejection(err) {\n    if (typeof console !== \"undefined\" && console) {\n       console.warn(\"Possible Unhandled Promise Rejection:\", err); // eslint-disable-line no-console\n    }\n  };\n\n  // @name bind\n  // @desc base for Function.prototype.bind\n  function bind(fn, thisArg) {\n    return function () {\n      fn.apply(thisArg, arguments);\n    };\n  }\n\n  // @name Promise\n  function Promise(fn) {\n    if (typeof this !== \"object\") throw new TypeError(\"Promises must be constructed via new\");\n    if (typeof fn !== \"function\") throw new TypeError(\"not a function\");\n    this._state = 0;\n    this._handled = false;\n    this._value = undefined;\n    this._deferreds = [];\n\n    doResolve(fn, this);\n  }\n\n  // @name handle\n  function handle(self, deferred) {\n    while (self._state === 3) {\n      self = self._value;\n    }\n    if (self._state === 0) {\n      self._deferreds.push(deferred);\n      return;\n    }\n    self._handled = true;\n    asap(function () {\n      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n      if (cb === null) {\n        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n        return;\n      }\n      var ret;\n      try {\n        ret = cb(self._value);\n      } catch (e) {\n        reject(deferred.promise, e);\n        return;\n      }\n      resolve(deferred.promise, ret);\n    });\n  }\n\n  // @name resolve\n  function resolve(self, newValue) {\n      try {\n        // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n        if (newValue === self) throw new TypeError(\"A promise cannot be resolved with itself.\");\n        if (newValue && (typeof newValue === \"object\" || typeof newValue === \"function\")) {\n          var then = newValue.then;\n          if (newValue instanceof Promise) {\n            self._state = 3;\n            self._value = newValue;\n            finale(self);\n            return;\n          } else if (typeof then === \"function\") {\n            doResolve(bind(then, newValue), self);\n            return;\n          }\n        }\n        self._state = 1;\n        self._value = newValue;\n        finale(self);\n      } catch (e) {\n        reject(self, e);\n      }\n  }\n\n  // @name reject\n  function reject(self, newValue) {\n    self._state = 2;\n    self._value = newValue;\n    finale(self);\n  }\n\n  // @name finale\n  function finale(self) {\n    if (self._state === 2 && self._deferreds.length === 0) {\n      asap(function() {\n        if (!self._handled) {\n          onUnhandledRejection(self._value);\n        }\n      }, 1);\n    }\n  \n    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n      handle(self, self._deferreds[i]);\n    }\n    self._deferreds = null;\n  }\n\n  // @name Handler\n  function Handler(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === \"function\" ? onFulfilled : null;\n    this.onRejected = typeof onRejected === \"function\" ? onRejected : null;\n    this.promise = promise;\n  }\n\n  // @name doResolve\n  // @desc Take a potentially misbehaving resolver function and \n  //       make sure onFulfilled and onRejected are only called \n  //       once. Makes no guarantees about asynchrony.\n  function doResolve(fn, self) {\n    var done = false;\n    try {\n      fn(function (value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      }, function (reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      });\n    } catch (ex) {\n      if (done) return;\n      done = true;\n      reject(self, ex);\n    }\n  }\n\n  // @name catch\n  Promise.prototype[\"catch\"] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n\n  // @name then\n  Promise.prototype.then = function (onFulfilled, onRejected) {\n    var prom = new Promise(noop);\n    handle(this, new Handler(onFulfilled, onRejected, prom));\n    return prom;\n  };\n\n  // @name all\n  Promise.all = function (arr) {\n    var args = Array.prototype.slice.call(arr);\n\n    return new Promise(function (resolve, reject) {\n      if (args.length === 0) return resolve([]);\n      var remaining = args.length;\n\n      function res(i, val) {\n        try {\n          if (val && (typeof val === \"object\" || typeof val === \"function\")) {\n            var then = val.then;\n            if (typeof then === \"function\") {\n                then.call(val, function (val) {\n                    res(i, val);\n                }, reject);\n                return;\n            }\n          }\n          args[i] = val;\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (ex) {\n          reject(ex);\n        }\n      }\n\n      for (var i = 0; i < args.length; i++) {\n        res(i, args[i]);\n      }\n    });\n  };\n\n  // @name resolve\n  Promise.resolve = function (value) {\n    if (value && typeof value === \"object\" && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(function (resolve) {\n      resolve(value);\n    });\n  };\n\n  // @name reject\n  Promise.reject = function (value) {\n    return new Promise(function (resolve, reject) {\n      reject(value);\n    });\n  };\n\n  // @name race\n  Promise.race = function (values) {\n    return new Promise(function (resolve, reject) {\n      for (var i = 0, len = values.length; i < len; i++) {\n        values[i].then(resolve, reject);\n      }\n    });\n  };\n\n  // @name _setImmediateFn\n  // @desc set the immediate function to execute callbacks\n  // @param {function} fn - function to execute\n  Promise._setImmediateFn = function _setImmediateFn(fn) {\n    asap = fn;\n  };\n  \n  // @name _setUnhandledRejectionFn\n  // @desc set the unhandled rejection function\n  // @param {function} fn - function to execute\n  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n    onUnhandledRejection = fn;\n  };\n\n  // ---------------------------------------------\n  //   Export block\n  // ---------------------------------------------\n  if (typeof window.Promise != \"function\") {\n    window.Promise = Promise;\n  }\n\n})();\n},{}],6:[function(require,module,exports){\n\"use strict\";\n\n// -------------------------------------\n//   Dependencies\n// -------------------------------------\n/** \n  * @plugins\n**/\n\n// -------------------------------------\n//   Base - Query\n// -------------------------------------\n/** \n  * @name query\n  * @desc A base module to abstract document.querySelectorAll\n          for increased performance and greater usability. \n          query is attached to the window object.\n**/\n(function() {\n  console.log(\"base/query.js loaded.\");\n\n  var doc = window.document, \n  simpleRe = /^(#?[\\w-]+|\\.[\\w-.]+)$/, \n  periodRe = /\\./g, \n  slice = [].slice,\n  classes;\n\n  // @name query\n  // @desc the main function for the base\n  // @param {String} selector\n  // @param {Element} context (optional)\n  // @return {Array}\n  function query (selector, context) {\n    context = context || doc;\n    // Redirect simple selectors to the more performant function\n    if(simpleRe.test(selector)){\n      switch(selector.charAt(0)){\n        case \"#\":\n          // Handle ID-based selectors\n          return [context.getElementById(selector.substr(1))];\n        case \".\":\n          // Handle class-based selectors\n          // Query by multiple classes by converting the selector \n          // string into single spaced class names\n          classes = selector.substr(1).replace(periodRe, \" \");\n          return slice.call(context.getElementsByClassName(classes));\n        default:\n          // Handle tag-based selectors\n          return slice.call(context.getElementsByTagName(selector));\n      }\n    }\n    // Default to `querySelectorAll`\n    return slice.call(context.querySelectorAll(selector));\n  }\n\n  // ---------------------------------------------\n  //   Export block\n  // ---------------------------------------------\n  window.query = query;\n    \n})();\n},{}],7:[function(require,module,exports){\n\"use strict\";\n\n// -------------------------------------\n//   Dependencies\n// -------------------------------------\n/** \n  * @plugins\n**/\n\n// -------------------------------------\n//   Base - Request Animation Frame\n// -------------------------------------\n/** \n  * @name requestAnimationFrame\n  * @desc A base module to window.requestAnimationFrame\n          for creating a single cross browser version. \n          requestAnimationFrame is attached to the \n          window object.\n**/\n(function() {\n  console.log(\"base/raf.js loaded.\");\n\n  var lastTime = 0;\n  var vendors = [\"ms\", \"moz\", \"webkit\", \"o\"];\n\n  // assign the correct vendor prefix to the window.requestAnimationFrame\n  for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n    window.requestAnimationFrame = window[vendors[x]+\"RequestAnimationFrame\"];\n    window.cancelAnimationFrame = window[vendors[x]+\"CancelAnimationFrame\"] \n                                 || window[vendors[x]+\"CancelRequestAnimationFrame\"];\n  }\n\n  // @name requestAnimationFrame\n  // @desc the main function for the base\n  // @param {Function} callback - The callback function\n  // @return {Integer} requestID - the id passed to cancelAnimationFrame\n  function requestAnimationFrame(callback, element) {\n    var currTime = new Date().getTime();\n    var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n    var id = window.setTimeout(function() { callback(currTime + timeToCall); }, \n      timeToCall);\n    lastTime = currTime + timeToCall;\n    return id;\n  }\n\n  // @name cancelAnimationFrame\n  // @desc the sub function for the base\n  // @param {String} id - The requestID to cancel\n  function cancelAnimationFrame(id) {\n    clearTimeout(id);\n  }\n\n  // ---------------------------------------------\n  //   Export block\n  // ---------------------------------------------\n  if (!window.requestAnimationFrame) {\n    window.requestAnimationFrame = requestAnimationFrame;\n  }\n\n  if (!window.cancelAnimationFrame) {\n    window.cancelAnimationFrame = cancelAnimationFrame;\n  }\n    \n})();\n},{}],8:[function(require,module,exports){\n\"use strict\";\n\n// -------------------------------------\n//   Dependencies\n// -------------------------------------\n/** \n  * @plugins\n**/\n\n// -------------------------------------\n//   Base - Template\n// -------------------------------------\n/** \n  * @name template\n  * @desc A base module that is used to create template \n          tag elements that represents templates used\n          by an app for any purpose.\n**/\n\n(function() {\n  console.log(\"base/template.js loaded.\");\n\n  // @name createTemplateTags\n  // @desc the main function for the base\n  function createTemplateTags() {\n    if (\"content\" in document.createElement(\"template\")) {\n        return false;\n    }\n\n    var templates = document.getElementsByTagName(\"template\");\n    var plateLen = templates.length;\n\n    for (var x = 0; x < plateLen; ++x) { try {\n      var template = templates[x];\n      var content  = template.childNodes;\n      var fragment = document.createDocumentFragment();\n\n      while (content[0]) {\n          fragment.appendChild(content[0]);\n      }\n\n      template.content = fragment;}\n      catch(error){ console.log(error); }\n    }\n  }\n\n  // ---------------------------------------------\n  //   Export block\n  // ---------------------------------------------\n  window.createTemplateTags = createTemplateTags;\n  createTemplateTags();\n\n})();\n\n},{}],9:[function(require,module,exports){\n\"use strict\";\n\n// -------------------------------------\n//   Dependencies\n// -------------------------------------\n/**\n  * @plugins\n  * require(\"jquery\");\n**/\n\n// base\nrequire(\"../../base/query\");\nrequire(\"../../base/promise\");\n\n// config\nvar CONFIG = require(\"../../config\");\n\n// -------------------------------------\n//   Component - Promo Video\n// -------------------------------------\n/**\n  * @name promo-video.component\n  * @desc The promo video component for the app.\n**/\n\n(function($){\n  console.log(\"components/common/promo-video.component.js loaded.\");\n\n  /**\n    * @name PromoVideo\n    * @desc the main class for the component\n    * @param {Object} options - options for the component\n    * @return {Object} - the instance of the component class\n  **/\n  function PromoVideo(options) {\n    // ---------------------------------------------\n    //   Private members\n    // ---------------------------------------------\n    var _el = { // reference to the DOM element\n      main: null, // the main parent DOM element\n      video: null // the video child DOM element\n    };\n\n    var _class = { // the classes that need to be applied\n      main: \"promo-video\",  // to the main parent DOM element\n      video: \"video__cover\" // to the video child DOM element\n    };\n\n    // ---------------------------------------------\n    //   Public members\n    // ---------------------------------------------\n    /* empy block */\n\n    // ---------------------------------------------\n    //   Private methods\n    // ---------------------------------------------\n    /* empy block */\n\n    // ---------------------------------------------\n    //   Public methods\n    // ---------------------------------------------\n    /* empy block */\n\n    // ---------------------------------------------\n    //   Constructor block\n    // ---------------------------------------------\n    // check if the promo video has valid options\n    // element - should be a valid DOM element\n    if(!options || !options.element\n      || !options.element.nodeName || !options.element.nodeType) {\n      console.log(\"promo-video.component.js: Cannot create promo video with invalid options.\");\n      return null;  // return null if invalid\n    }\n\n    // get the main parent element\n    _el.main = options.element;\n\n    // get all the child video elements\n    _el.videos = query(\".\" + _class.video, _el.main);\n\n    // loop through each of the child video elements\n    _el.videos.forEach(function(video, index) {\n        // get the video's data-src attribute\n        var src = video.getAttribute(\"data-src\");\n\n        // set the src attribute for the video\n        // only if this is not a mobile device\n        if(!CONFIG.device.isMobile\n          && src != null && src.length > 1) {\n            video.setAttribute(\"src\", src);\n        }\n\n        // remove the data-src attribute\n        video.removeAttribute(\"data-src\");\n    });\n\n    // ---------------------------------------------\n    //   Instance block\n    // ---------------------------------------------\n    return { };\n  }\n\n  // ---------------------------------------------\n  //   Export block\n  // ---------------------------------------------\n  module.exports = PromoVideo;\n\n})(jQuery);\n\n\n},{\"../../base/promise\":5,\"../../base/query\":6,\"../../config\":12}],10:[function(require,module,exports){\n\"use strict\";\n\n// -------------------------------------\n//   Dependencies\n// -------------------------------------\n/**\n  * @plugins\n  * require(\"jquery\");\n  * require(\"velocity\");\n**/\n\n// base\nrequire(\"../base/query\");\nrequire(\"../base/promise\");\n\n// config\nvar CONFIG = require(\"../config\");\n\n// -------------------------------------\n//   Component - Header\n// -------------------------------------\n/**\n  * @name header.component\n  * @desc The header component for the app.\n**/\n\n(function($){\n  console.log(\"components/header.component.js loaded.\");\n\n  /**\n    * @name Header\n    * @desc the main class for the component\n    * @param {Object} options - options for the component\n    * @return {Object} - the instance of the component class\n  **/\n  function Header(options) {\n    // ---------------------------------------------\n    //   Private members\n    // ---------------------------------------------\n    var _el = { // reference to the DOM elements for\n      main: null, // the main parent DOM element\n      nav:  null, // the header nav  DOM element\n      back: null, // the header back DOM element\n      menu: null  // the header menu DOM element\n    };\n\n    var _class = { // the classes that are contained in\n      main: \"header\", // the main parent DOM element\n      nav:  \"header__nav\", // the header nav DOM element\n      back: \"header__back\", // the header back DOM element\n      menu: \"header__menu--mobile\", // the header menu DOM element\n\n      modifier: { // applied modifier classes\n        open: \"header--open\", // on header when the menu is open\n        closed: \"header--closed\", // on header when the menu is closed\n        fallback: \"header--fallback\", // on header to fix old browser issues\n\n        sticky: \"section--header-sticky\", // on section when the header is sticky\n        hidden: \"section--header-hidden\", // on section when the header is hidden\n\n        active: \"link--active\" // on menu when the link is active\n      }\n    };\n\n    var _elHtml = null; // reference to the html DOM element\n    var _elBody = null; // reference to the body DOM element\n\n    var _hierarchy = []; // array of paths representing the hierarchy\n    var _parentPath = \"/\"; // string representation of the parent path\n\n    var _menuTimer = null; // timer used when opening (or) closing the menu\n    var _isMenuOpen = false; // flag to indicate if the header menu is open\n\n    var _section = null; // the parent section wrapping the header component\n    var _prevScroll = 0; // the previous position offset of the page scroll bar\n\n    // ---------------------------------------------\n    //   Public members\n    // ---------------------------------------------\n    /* empy block */\n\n    // ---------------------------------------------\n    //   Private methods\n    // ---------------------------------------------\n    // @name _addOpenClickListener\n    // @desc function to add click event listener for the menu open\n    function _addOpenClickListener() {\n       query(\"a:first-child\", _el.menu)[0].addEventListener(\"click\", open);\n    }\n\n    // @name _addCloseClickListener\n    // @desc function to add click event listener for the menu close\n    function _addCloseClickListener() {\n      query(\"a:last-child\", _el.menu)[0].addEventListener(\"click\", close);\n    }\n\n    // @name _removeOpenClickListener\n    // @desc function to remove click event listener for the menu open\n    function _removeOpenClickListener() {\n      query(\"a:first-child\", _el.menu)[0].removeEventListener(\"click\", open);\n    }\n\n    // @name _removeCloseClickListener\n    // @desc function to remove click event listener for the menu close\n    function _removeCloseClickListener() {\n      query(\"a:last-child\", _el.menu)[0].removeEventListener(\"click\", close);\n    }\n\n    // @name _addWindowResizeListener\n    // @desc function to add the window resize event listener\n    function _addWindowResizeListener() {\n      window.addEventListener(\"resize\", _windowResizeListener);\n    }\n\n    // @name _removeWindowResizeListener\n    // @desc function to remove the window resize event listener\n    function _removeWindowResizeListener() {\n      window.removeEventListener(\"resize\", _windowResizeListener);\n    }\n\n    // @name __windowResizeListener\n    // @desc the listener function for the window resize event\n    function _windowResizeListener(event) {\n      // check if the viewport has been resized beyond the mobile breakpoint\n      if(_isMenuOpen && !(CONFIG.breakpoint.isMobile || CONFIG.breakpoint.isMobileSmall)) {\n        close(); // close the header menu if it is not longer relevant\n      }\n    }\n\n\n    // @name _isPageChild\n    // @desc function to check if the given page is a child\n    // @return {Boolean} - the boolean result of the page hierarchy check\n    function _isPageChild() {\n      // get all the possible paths that leads to the current page\n      var paths = window.location.pathname.split(\"/\");\n      _hierarchy = []; // empty the hierarchy array\n\n      // loop through each of the paths and\n      // populate the page hierarchy array\n      paths.forEach(function(path, index) {\n        if(path.length > 1) { _hierarchy.push(path); }\n      });\n\n      // create string representation of the parent path\n      _parentPath = \"/\"; // reset the hierarchy name\n      _hierarchy.forEach(function(name, index) {\n        if(index < (_hierarchy.length - 1)\n           && name != \"careers\") {\n            _parentPath += (name + \"/\");\n        }\n      });\n\n      // return if this is a child page or not\n      return (_hierarchy.length > 2);\n    }\n\n    // @name _isPageParent\n    // @desc function to check if the given page is a parent\n    // @return {Boolean} - the boolean result of the page hierarchy check\n    function _isPageParent() { return !_isPageChild(); }\n\n    // @name _getPageParent\n    // @desc function to get the parent of the current child page\n    // @return {String} - the link href value to point to the parent\n    function _getPageParent() {\n      if(_isPageParent()) { return \"\"; }\n      else { return _parentPath; }\n    }\n\n    // @name _isLinkActive\n    // @desc function to check if the given link is active\n    // @param {DOM} link - the link DOM object to be checked for active\n    // @return {Boolean} - the boolean result of the active status check\n    function _isLinkActive(link) { try {\n      var path = window.location.pathname;\n      var href = link.getAttribute(\"href\");\n\n      if(href && href.length > 1) {\n        if(_isPageParent()) { return path.endsWith(href); }\n        else { return _parentPath.endsWith(href); }\n      }\n\n      else { return false; }}\n      catch(error) { return false; }\n    }\n\n    // @name __setLinkAsActive\n    // @desc function to set the given link as active\n    function _setLinkAsActive(link) {\n      link.classList.add(_class.modifier.active);\n    }\n\n    // @name __setLinkAsInActive\n    // @desc function to set the given link as inactive\n    function _setLinkAsInactive(link) {\n      link.classList.remove(_class.modifier.active);\n    }\n\n    // @name _disablePageScroll\n    // @desc function to disable page scroll\n    function _disablePageScroll() {\n      // disable scroll on the html and body\n      _elHtml.setAttribute(\"data-scroll\", \"disabled\");\n      _elBody.setAttribute(\"data-scroll\", \"disabled\");\n\n      // disable scrolling on touch devices\n      if(CONFIG.device.isMobile) {\n        document.ontouchmove = function(e){ e.preventDefault(); }\n      }\n    }\n\n    // @name _enablePageScroll\n    // @desc function to enable page scroll\n    function _enablePageScroll() {\n      // enable scroll on the html and body\n      _elHtml.removeAttribute(\"data-scroll\");\n      _elBody.removeAttribute(\"data-scroll\");\n\n      // enable scrolling on touch devices\n      if(CONFIG.device.isMobile) {\n        document.ontouchmove = function(e){ return true; }\n      }\n    }\n\n    // @name _sticky\n    // @desc function to manage sticky header styling on scroll\n    // @param {Event} - the event that triggerred the function\n    function _sticky(event) {\n      // calculte the new scroll position and the difference from previous\n      var newScroll  = (document.documentElement.scrollTop || document.body.scrollTop);\n      var diffScroll = _prevScroll - newScroll;\n      _prevScroll = newScroll;\n\n      // if the new scroll is less than 0\n      // remove both the modifier classes\n      if (newScroll <= 0) {\n        _section.classList.remove(_class.modifier.sticky);\n        _section.classList.remove(_class.modifier.hidden);\n      }\n\n      // if the new scroll is greater than 0\n      else {\n        // add the sticky modifer class\n         _section.classList.add(_class.modifier.sticky);\n\n        // check if the scroll difference is less than 0\n        if (diffScroll <= 0) {\n          // add the hidden modifier class if is\n          _section.classList.add(_class.modifier.hidden);\n        }\n\n        else {\n          // remove the hidden modifier class if is not\n          _section.classList.remove(_class.modifier.hidden);\n        }\n      }\n    }\n\n    // @name _addWindowScrollListener\n    // @desc function to add the window scroll event listener\n    function _addWindowScrollListener() {\n      window.addEventListener(\"scroll\", _sticky);\n    }\n\n    // @name _removeWindowResizeListener\n    // @desc function to remove the window scroll event listener\n    function _removeWindowScrollListener() {\n      window.removeEventListener(\"scroll\", _sticky);\n    }\n\n    // ---------------------------------------------\n    //   Public methods\n    // ---------------------------------------------\n    // @name open\n    // @desc function to open the header menu\n    // @param {Event} - the event that triggerred the function\n    function open(event) {\n      if(_isMenuOpen) {\n        console.log(\"header.component.js: The header menu is already open.\");\n        return false;\n      }\n\n      // prevent default events\n      if(event) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      // remove the window scroll listener\n      _removeWindowScrollListener();\n\n      // set the menu open flag\n      // and disable page scroll\n      _isMenuOpen = true;\n      _disablePageScroll();\n\n      // make sure the nav is hidden\n      // add add, remove the modifiers\n      _el.nav.style.opacity = 0;\n      _el.main.classList.add(_class.modifier.open);\n      _el.main.classList.remove(_class.modifier.closed);\n\n      requestAnimationFrame(function() {\n        // finish any animations currently\n        // being performed on header nav\n        $(_el.nav).velocity(\"finish\");\n\n        // perform the new animation\n        $(_el.nav).velocity(\"transition.slideUpIn\", {\n          easing: \"easeInOutQuad\",\n          delay: CONFIG.animation.delay,\n          duration: CONFIG.animation.durationFast\n        });\n      });\n\n      // add the window resize listener\n      _addWindowResizeListener();\n    }\n\n    // @name close\n    // @desc function to close the header menu\n    // @param {Event} - the event that triggerred the function\n    function close(event) {\n      if(!_isMenuOpen) {\n        console.log(\"header.component.js: The header menu is already closed.\");\n        return false;\n      }\n\n      // prevent default events\n      if(event) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      // reset the menu open flag\n      // and enable page scroll\n      _isMenuOpen = false;\n      _enablePageScroll();\n\n      // clear any previously set timers\n      if(_menuTimer != null) {\n        clearTimeout(_menuTimer);\n        _menuTimer = null;\n      }\n\n      // make sure the nav is visible\n      // add add, remove the modifiers\n      _el.nav.style.opacity = 1;\n      requestAnimationFrame(function() {\n        // change the modifer classes after a set timeout\n        _menuTimer = setTimeout(function() {\n          _el.main.classList.add(_class.modifier.closed);\n          _el.main.classList.remove(_class.modifier.open);\n        }, CONFIG.animation.delay);\n      });\n\n      requestAnimationFrame(function() {\n        // finish any animations currently\n        // being performed on header nav\n        $(_el.nav).velocity(\"finish\");\n\n        // perform the new animation\n        $(_el.nav).velocity(\"transition.slideDownOut\", {\n          easing: \"easeInOutQuad\", delay: 0,\n          duration: CONFIG.animation.durationFast,\n\n          // add the window scroll listener on complete\n          complete: function() { _addWindowScrollListener(); }\n        });\n      });\n\n      // remove the window resize listener\n      _removeWindowResizeListener();\n    }\n\n    // ---------------------------------------------\n    //   Constructor block\n    // ---------------------------------------------\n    // check if the header has valid options\n    // element - should be a valid DOM element\n    if(!options || !options.element\n      || !options.element.nodeName || !options.element.nodeType) {\n      console.log(\"header.component.js: Cannot create header with invalid options.\");\n      return null;  // return null if invalid\n    }\n\n    // get the main parent element\n    _el.main = options.element;\n\n    // get all the child elements\n    _el.nav  = query(\".\" + _class.nav, _el.main)[0];\n    _el.back = query(\".\" + _class.back, _el.main)[0];\n    _el.menu = query(\".\" + _class.menu, _el.main)[0];\n\n    // get the html and body DOM elements\n    _elHtml = query(\"html\")[0];\n    _elBody = query(\"body\")[0];\n\n    // add browser specific class for older browsers\n    if(CONFIG.browser.isIE && CONFIG.browser.isIEOld) {\n      _el.main.classList.add(_class.modifier.fallback);\n    }\n\n    // loop through all the nav links and check if any of them are active\n    query(\".link\", _el.nav).forEach(function(link, index) {\n      if(_isLinkActive(link)) { _setLinkAsActive(link); }\n      else { _setLinkAsInactive(link); }\n    });\n\n    // add click event listeners for\n    // the menu open and close links\n    _addOpenClickListener();\n    _addCloseClickListener();\n\n    // get the wrapping header section\n    // and the current page scroll offset\n    _section = query(\".section--header\")[0];\n    _prevScroll = document.body.scrollTop;\n\n     // trigger stricky header once on load\n     // and add the window scroll listener\n    _sticky(); _addWindowScrollListener();\n\n    // check if this is a parent page\n    if(_isPageParent()) {\n      // hide the back link if it is a parent\n      _el.back.style.visibility = \"hidden\";\n    }\n\n    else {\n      // show the back link if it is a child\n      // and set the href atttribute of the\n      // back link to point to the page page\n      _el.back.style.visibility = \"visible\";\n      query(\"a\", _el.back)[0].setAttribute(\"href\", _getPageParent());\n    }\n\n    // ---------------------------------------------\n    //   Instance block\n    // ---------------------------------------------\n    return {\n      open: open,   // function to open the header menu\n      close: close  // function to close the header menu\n    };\n  }\n\n  // ---------------------------------------------\n  //   Export block\n  // ---------------------------------------------\n  module.exports = Header;\n\n})(jQuery);\n\n},{\"../base/promise\":5,\"../base/query\":6,\"../config\":12}],11:[function(require,module,exports){\n\"use strict\";\n\n// -------------------------------------\n//   Dependencies\n// -------------------------------------\n/**\n  * @plugins\n  * require(\"jquery\");\n**/\n\n// base\nrequire(\"../../base/query\");\nrequire(\"../../base/event\");\n\n// config\nvar CONFIG = require(\"../../config\");\n\n// -------------------------------------\n//   Directive - Intro Tile\n// -------------------------------------\n/**\n  * @name intro-tile.component\n  * @desc he intro tile component for the app.\n**/\n\n(function($){\n  console.log(\"components/intro/intro-tile.component.js loaded.\");\n\n  /**\n    * @name IntroTile\n    * @desc the main class for the component\n    * @param {Object} options - options for the component\n    * @return {Object} - the instance of the component class\n  **/\n  function IntroTile(options) {\n    // ---------------------------------------------\n    //   Private members\n    // ---------------------------------------------\n    // create base variables\n    var _el = {\n      images: {\n        sydney:    null,\n        melbourne: null,\n        group:     null\n      },\n      anchors: {\n        sydney:    null,\n        melbourne: null,\n        group:     null\n      }\n    };\n\n    // ---------------------------------------------\n    //   Public members\n    // ---------------------------------------------\n    /* empy block */\n\n    // ---------------------------------------------\n    //   Private methods\n    // ---------------------------------------------\n    /* empy block */\n\n    // ---------------------------------------------\n    //   Public methods\n    // ---------------------------------------------\n    /* empy block */\n\n    // ---------------------------------------------\n    //   Constructor block\n    // ---------------------------------------------\n    // check if the promo video has valid options\n    // element - should be a valid DOM element\n    if(!options\n       || !options.element || !options.element.nodeName || !options.element.nodeType\n       || !options.group || !options.group.nodeName || !options.group.nodeType) {\n      console.log(\"intro-tile.component.js: Cannot create intro-tile with invalid options.\");\n      return null;  // return null if invalid\n    }\n\n    // get elements\n    _el.images.group     = options.element.querySelector(\"[data-link-image=group]\");\n    _el.images.sydney    = options.element.querySelector(\"[data-link-image=sydney]\");\n    // _el.images.melbourne = options.element.querySelector(\"[data-link-image=melbourne]\");\n\n    _el.anchors.group     = options.element.querySelector(\"[data-link-anchor=group]\");\n    _el.anchors.sydney    = options.element.querySelector(\"[data-link-anchor=sydney]\");\n    // _el.anchors.melbourne = options.element.querySelector(\"[data-link-anchor=melbourne]\");\n\n\n    // @name _onAnchorHover\n    // @desc function to set up anchor mouseover hooks\n    // @param {DOM} image - the image that needs to be set on hover\n    function _onAnchorHover(image) {\n      var clName = \"intro-tile__image-section--visible\";\n\n      if (_el.images.sydney.classList.contains(clName)) {\n        _el.images.sydney.classList.remove(clName)\n      }\n\n      // if (_el.images.melbourne.classList.contains(clName)) {\n      //   _el.images.melbourne.classList.remove(clName)\n      // }\n\n      if (_el.images.group.classList.contains(clName)) {\n        _el.images.group.classList.remove(clName)\n      }\n\n      if (!_el.images.group.classList.contains(clName)) {\n        image.classList.add(clName);\n      }\n    }\n\n    // add event listeners ofr on anchor hover / mouseover\n    _el.anchors.group.addEventListener(\"mouseover\",     function() { _onAnchorHover(_el.images.group)     });\n    _el.anchors.sydney.addEventListener(\"mouseover\",    function() { _onAnchorHover(_el.images.sydney)    });\n    // _el.anchors.melbourne.addEventListener(\"mouseover\", function() { _onAnchorHover(_el.images.melbourne) });\n\n    // create a default mouseover event on load\n    var eventMouseOver = new CustomEvent(\"mouseover\");\n\n    // dispatch the default mouseover event on load\n    requestAnimationFrame(function() {\n      _el.anchors.sydney.dispatchEvent(eventMouseOver);\n    });\n\n    // filthy jquery scrolling to #group section\n    // $(options.group).hide(0);\n    _el.anchors.group.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      // $(options.group).show(0);\n      $('html, body').animate({\n        scrollTop: $(options.group).offset().top\n      }, 400);\n    });\n\n    // ---------------------------------------------\n    //   Instance block\n    // ---------------------------------------------\n    return { };\n  }\n\n  // ---------------------------------------------\n  //   Export block\n  // ---------------------------------------------\n  module.exports = IntroTile;\n\n})(jQuery);\n\n\n},{\"../../base/event\":3,\"../../base/query\":6,\"../../config\":12}],12:[function(require,module,exports){\n\"use strict\";\n\n// -------------------------------------\n//   Dependencies\n// -------------------------------------\n/**\n  * @plugins\n**/\n\n// base\n/* empty block */\n\n// -------------------------------------\n//   Config\n// -------------------------------------\n/**\n  * @name config\n  * @desc The main js file that contains the\n          config options and functions for the app.\n**/\n(function($) {\n  console.log(\"config.js loaded.\");\n\n  /**\n    * @name BuildDetect\n    * @desc Class to detect the current build.\n    * @param {String} host - the window location host\n    * @return {Object} - the instance of the build class\n  **/\n  function BuildDetect(host) {\n    // ---------------------------------------------\n    //   Private members\n    // ---------------------------------------------\n    /* empty block */\n\n    // ---------------------------------------------\n    //   Public members\n    // ---------------------------------------------\n    var bd = this; // to capture the content of this\n    bd.isProd = false; // flag turn dev mode on/off ( will be modified by gulp )\n    bd.isDeploy = true; // flag turn live mode on/off ( will be modified by gulp )\n\n    // ---------------------------------------------\n    //   Private methods\n    // ---------------------------------------------\n    /* empty block */\n\n    // ---------------------------------------------\n    //   Public methods\n    // ---------------------------------------------\n    // @name isMobile\n    // @desc to detect mobile build\n    // @return {Boolean} - true or false\n    function isMobile() { return host.indexOf(\":m.\") != -1; }\n\n    // @name isDesktop\n    // @desc to detect desktop build\n    // @return {Boolean} - true or false\n    function isDesktop() { return !isMobile(); }\n\n    // ---------------------------------------------\n    //   Constructor block\n    // ---------------------------------------------\n    // check if the given host is valid\n    if(host == null || typeof host == \"undefined\") {\n      host = window.location.host;\n    }\n\n    // ---------------------------------------------\n    //   Instance block\n    // ---------------------------------------------\n    bd.isMobile = isMobile(); // to detect mobile build\n    bd.isDesktop = isDesktop(); // to detect desktop build\n  }\n\n  /**\n    * @name BreakpointDetect\n    * @desc Class to detect the current breakpoint.\n    * @return {Object} - the instance of the breakpoint class\n  **/\n  function BreakpointDetect() {\n    // ---------------------------------------------\n    //   Private members\n    // ---------------------------------------------\n    /* empty block */\n\n    // ---------------------------------------------\n    //   Public members\n    // ---------------------------------------------\n    var br = this; // to capture the content of this\n    br.value = null; // the current breakpoint value\n\n    // flags to indicate various browser breakpoints\n    br.isDesktopLarge = false; br.isDesktop = false; // desktop\n    br.isTablet = false; br.isTabletSmall = false;   // tablet\n    br.isMobile = false; br.isMobileSmall = false;   // mobile\n\n    // ---------------------------------------------\n    //   Private methods\n    // ---------------------------------------------\n    // @name _isMobileSmall, _isMobilem _isTabletSmall,\n    // @name _isTablet, _isDesktop, _isDesktopLarge\n    // @desc to detect various browser breakpoints\n    // @return {Boolean} - true or false\n    function _isDesktopLarge() { return  br.value == \"desktop-lg-up\"; }\n    function _isDesktop()      { return  _isDesktopLarge() || br.value == \"desktop\"; }\n\n    function _isTablet()       { return  _isTabletSmall() || br.value == \"tablet\"; }\n    function _isTabletSmall()  { return  br.value == \"tablet-sm\"; }\n\n    function _isMobile()       { return  _isMobileSmall() || br.value == \"mobile\"; }\n    function _isMobileSmall()  { return  br.value == \"mobile-sm\"; }\n\n    // @name _updateValues\n    // @desc function to update breakpoint value and flags\n    function _updateValues() {\n      // update the breakpoint value\n      br.value = window.getComputedStyle(document.querySelector('body'), ':before')\n                     .getPropertyValue('content').replace(/\\\"/g, '');\n\n      // update all the breakpoint flags\n      if(_isDesktopLarge()) { br.isDesktopLarge = true; } else { br.isDesktopLarge = false; }\n      if(_isDesktop()) { br.isDesktop = true; } else { br.isDesktop = false; }\n\n      if(_isTablet()) { br.isTablet = true; } else { br.isTablet = false; }\n      if(_isTabletSmall()) { br.isTabletSmall = true; } else { br.isTabletSmall = false; }\n\n      if(_isMobile()) { br.isMobile = true; } else { br.isMobile = false; }\n      if(_isMobileSmall()) { br.isMobileSmall = true; } else { br.isMobileSmall = false; }\n    }\n\n    // ---------------------------------------------\n    //   Public methods\n    // ---------------------------------------------\n    /* empty block */\n\n    // ---------------------------------------------\n    //   Constructor block\n    // ---------------------------------------------\n    // add window resize event listener\n    // to update the breakpoint value and fals\n    window.addEventListener(\"resize\", function(event) {\n      _updateValues();\n    });\n\n    // update the breakpoint value and flags\n    // at least once after initialization\n    _updateValues();\n\n    // ---------------------------------------------\n    //   Instance block\n    // ---------------------------------------------\n    /* empty block */\n  }\n\n  /**\n    * @name CONFIG\n    * @desc Constant that contains the config options and values for the app\n    * @return {Object} - all the possible config options and values for the app\n  **/\n  function CONFIG() {\n    // ---------------------------------------------\n    //   Private members\n    // ---------------------------------------------\n    var _md = new MobileDetect(navigator.userAgent); // detect mobile\n    var _bd = new BuildDetect(window.location.host); // detect build\n    var _os = _md.os(); // detect mobile OS\n\n    var _src = \"/\";   // src path\n    var _dist = \"/\"; // dist path\n    var _deploy = \"/\";     // deploy path\n\n    // ---------------------------------------------\n    //   Public members\n    // ---------------------------------------------\n    var breakpoint = new BreakpointDetect(); // detect breakpoint\n\n    // ---------------------------------------------\n    //   Private methods\n    // ---------------------------------------------\n    /* empty block */\n\n    // ---------------------------------------------\n    //   Public methods\n    // ---------------------------------------------\n    // @name isPhone, isTablet, isMobile, isIOS, isAndroid\n    // @desc functions to detect mobile device and os\n    // @return {Boolean} - returns true or false\n    function isPhone()  { return _md.phone()  != null; } // only phones\n    function isTablet() { return _md.tablet() != null || _bd.isMobile; } // only tablets\n    function isMobile() { return _md.mobile() != null || _bd.isMobile; } // phones and tablets\n\n    function isIOS() { return _os ? (_os.toLowerCase().indexOf(\"ios\") != -1) : false; } // ios\n    function isAndroid() { return _os ? (_os.toLowerCase().indexOf(\"android\") != -1) : false; } // android\n\n    function isIOSOld() { return _os ? (isIOS() && parseFloat(_md.version(\"iOS\")) < 9) : false; } // ios old\n    function isAndroidOld() { return _os ? (isAndroid() && parseFloat(_md.version(\"Android\")) < 6) : false; } // android old\n\n    // @name isFirefox, isSafari, isChrome\n    // @desc function to detect firefox, safari and chrome\n    // @return {Boolean} - returns true or false base on the check\n    function isFirefox() { return !isNaN(_md.version(\"Firefox\")); }\n    function isSafari()  { return !isNaN(_md.version(\"Safari\"));  }\n    function isChrome()  { return !isNaN(_md.version(\"Chrome\"));  }\n\n    // @name getIEVersion\n    // @desc function to get internet explorer version\n    // @return {Boolean|Number} - returns version number or false\n    function getIEVersion() {\n      var ua = navigator.userAgent;\n\n      var msie = ua.indexOf(\"MSIE \");\n      if (msie > 0) {\n          // IE 10 or older - return version number\n          return parseInt(ua.substring(msie + 5, ua.indexOf(\".\", msie)), 10);\n      }\n\n      var trident = ua.indexOf(\"Trident/\");\n      if (trident > 0) {\n        // IE 11 - return version number\n        var rv = ua.indexOf(\"rv:\");\n        return parseInt(ua.substring(rv + 3, ua.indexOf(\".\", rv)), 10);\n      }\n\n      var edge = ua.indexOf(\"Edge/\");\n      if (edge > 0) {\n        // IE 12 - return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf(\".\", edge)), 10);\n      }\n\n      // other browsers\n      return false;\n    }\n\n    // @name isIE\n    // @desc function to detect internet explorer\n    // @return {Boolean} - returns true or false\n    function isIE() {\n      try { return parseInt(getIEVersion()) > 0; }\n      catch(error) { /*console.log(error);*/ return false; }\n    }\n\n    // @name isIEOld\n    // @desc function to detect old internet explorer\n    // @return {Boolean} - returns true or false\n    function isIEOld() {\n      try { return parseInt(getIEVersion()) <= 10; }\n      catch(error) { /*console.log(error);*/ return false; }\n    }\n\n    // @name isLocalHost\n    // @desc functions to check for the server host environment\n    // @return {Boolean} - returns true or false based on environment\n    function isLocalHost() {\n      return (window.location.host).indexOf(\":8000\") != -1\n          || (window.location.host).indexOf(\":4000\") != -1;\n    }\n\n    // @name isAmazonHost\n    // @desc functions to check for the server host environment\n    // @return {Boolean} - returns true or false based on environment\n    function isAmazonHost() {\n      return (window.location.host).indexOf(\"amazonaws\") != -1;\n    }\n\n    // @name getViewsPath\n    // function to get the path for views\n    // @return {String} - returns the path\n    function getViewsPath() {\n      var viewsPath = \"static/views/\";\n      return !_bd.isProd ? _src + viewsPath : _dist + viewsPath;\n    }\n\n    // @name getTemplatesPath\n    // function to get the path for templates\n    // @return {String} - returns the path\n    function getTemplatesPath() {\n      var templatesPath = \"static/templates/\";\n      return !_bd.isProd ? _src + templatesPath : _dist + templatesPath;\n    }\n\n    // @name getDataPath\n    // function to get the path for data\n    // @return {String} - returns the path\n    function getDataPath() {\n      var dataPath = \"data/\";\n      return !_bd.isProd ? _src + dataPath : _dist + dataPath;\n    }\n\n    // @name getImagesPath\n    // function to get the path for images\n    // @return {String} - returns the path\n    function getImagesPath() {\n      var imagesPath = \"images/\";\n      return !_bd.isProd ? _src + imagesPath : _dist + imagesPath;\n    }\n\n    // @name getVideosPath\n    // function to get the path for videos\n    // @return {String} - returns the path\n    function getVideosPath() {\n      var videosPath = \"videos/\";\n      return !_bd.isProd ? _src + videosPath : _dist + videosPath;\n    }\n\n    // ---------------------------------------------\n    //   Constructor block\n    // ---------------------------------------------\n    // if app is in deployment mode\n    if(_bd.isDeploy) {\n        // all paths are the same\n        _src = _dist = _deploy;\n    }\n\n    // ---------------------------------------------\n    //   Instance block\n    // ---------------------------------------------\n    return {\n      // device\n      device: {\n        isPhone:  isPhone(),  // functions to detect mobile device and os\n        isTablet: isTablet(), // functions to detect mobile device and os\n        isMobile: isMobile(), // functions to detect mobile device and os\n\n        isIOS:     isIOS(),     // functions to detect mobile device and os\n        isAndroid: isAndroid(), // functions to detect mobile device and os\n\n        isIOSOld:     isIOSOld(),    // functions to detect mobile device and os\n        isAndroidOld: isAndroidOld() // functions to detect mobile device and os\n      },\n\n      // browser\n      browser: {\n        isFirefox: isFirefox(), // function to detect firefox\n        isSafari:  isSafari(),  // function to detect safari\n        isChrome:  isChrome(),  // function to detect chrome\n\n        isIE:    isIE(),   // function to detect ie\n        isIEOld: isIEOld() // function to detect old ie\n      },\n\n      // breakpoint\n      breakpoint: breakpoint, // functions to detect the current breakpoint\n\n      // environment\n      environment: {\n        isProd: _bd.isProd,     // functions to check for the server host environment\n        isDeploy: _bd.isDeploy, // functions to check for the server host environment\n\n        isLocalHost: isLocalHost(),   // functions to check for the server host environment\n        isAmazonHost: isAmazonHost(), // functions to check for the server host environment\n      },\n\n      // path\n      path: {\n        views: getViewsPath(),         // function to get the path for views\n        templates: getTemplatesPath(), // function to get the path for templates\n\n        data: getDataPath(),     // function to get the path for data\n        images: getImagesPath(), // function to get the path for images\n        videos: getVideosPath()  // function to get the path for videos\n      },\n\n      // animation\n      animation: {\n        // duration and delay\n        // used in js animations\n        delay: 250,   // delay in ms\n        duration: 500, // duration in ms\n        durationSlow: (500 * 1.3), // duration in ms\n        durationFast: (500 * 0.6), // duration in ms\n        durationInstant: (500 * 0.4) // duration in ms\n      },\n\n      // timeout\n      timeout: {\n        // timeouts used for\n        // manual scope and\n        // animation updates\n        scope: 275,    // timeout scope in ms\n        animation: 525 // timeout animation in ms\n      }\n    };\n  }\n\n  // ---------------------------------------------\n  //   Module export block\n  // ---------------------------------------------\n  module.exports = new CONFIG();\n\n})(jQuery);\n\n},{}],13:[function(require,module,exports){\n\"use strict\";\n\n// -------------------------------------\n//   Dependencies\n// -------------------------------------\n/** \n  * @plugins\n  * require(\"jquery\");\n**/\n\n// base\nrequire(\"../base/query\");\n\n// -------------------------------------\n//   Directive - Clickable Tile\n// -------------------------------------\n/** \n  * @name clickable-tile.directive\n  * @desc The clickable-tile directive for the app.\n**/\n\n(function($){\n  console.log(\"directives/clickable-tile.directive.js loaded.\");\n\n  /** \n    * @name ClickableTile\n    * @desc the main class for the directive\n    * @param {Object} options - options for the directive\n    * @return {Object} - the instance of the directive class\n  **/\n  function ClickableTile(options) {\n    // ---------------------------------------------\n    //   Private members\n    // ---------------------------------------------\n    var _el = { // reference to the DOM element\n      main: null, // the main parent DOM element\n      link: null  // the link child DOM element\n    };\n\n    var _href = \"#\"; // the href value to go to when the tile is clicked \n    var _title = \"\"; // the title value displayed when the tile is hovered\n    var _target = \"_self\"; // the target to be used when the tile is clicked\n\n    // ---------------------------------------------\n    //   Public members\n    // ---------------------------------------------\n    /* empy block */\n\n    // ---------------------------------------------\n    //   Private methods\n    // ---------------------------------------------\n    // @name _addClickEventListener\n    // @desc function to add the click event listener to the main element\n    function _addClickEventListener() {\n      _el.main.addEventListener(\"click\", _clickEventListener);\n    }\n\n    // @name _removeClickEventListener\n    // @desc function to remove the click event listener from the main element\n    function _removeClickEventListener() {\n      _el.main.removeEventListener(\"click\", _clickEventListener);\n    }\n\n    // @name _clickEventListener\n    // @desc the event listener function added to the main element\n    // @param {Event} - the click event that triggers the function call\n    function _clickEventListener(event) {\n      // prevent event default\n      // and event propagation\n      if(event) { \n        event.preventDefault(); \n        event.stopPropagation(); \n      }\n\n      // get the window protocol and host\n      var protocol = window.location.protocol;\n      var host = window.location.host;\n\n      // get the url to navigate to, either\n      // in the same window or a new window\n      var url = protocol + \"//\" + host + _href;\n\n      // check if the href contains an external link or or not\n      if(_href.indexOf(\"http\") != -1) { window.open(_href, _target); } \n      else { window.open(url, _target); }\n    }\n\n    // ---------------------------------------------\n    //   Public methods\n    // ---------------------------------------------\n    /* empy block */\n\n    // ---------------------------------------------\n    //   Constructor block\n    // ---------------------------------------------\n    // check if the clickable-tile has valid options\n    // element - should be a valid DOM element\n    if(!options || !options.element \n      || !options.element.nodeName || !options.element.nodeType) {\n      console.log(\"clickable-tile.directive.js: Cannot create clickable-tile with invalid options.\");\n      return null;  // return null if invalid\n    }\n\n    // get the main parent element\n    _el.main = options.element;\n\n    // get the first child link element\n    _el.link = query(\"a[href]\", _el.main)[0];\n\n    // check if a valid link exists wikthin the tile\n    if(_el.link && _el.link.nodeName && _el.link.nodeType) {\n      _href = _el.link.getAttribute(\"href\");\n      _title = _el.link.getAttribute(\"title\");\n      _target = _el.link.getAttribute(\"target\");\n\n      // check for a valid href and target\n      if(_href.length <= 1) { _href = \"#\"; }\n      if(_target != \"_self\" && _target != \"_blank\") { \n        _target = \"_self\"; // default value is _self\n      }\n\n      // set the title for the main element\n      // if the link has a title set on it\n      if(_title != null && _title.length > 1) { \n        _el.main.setAttribute(\"title\", _title); \n      }\n\n      // override any click event atttached \n      // to the main tile and it's clildren\n      _addClickEventListener();\n    }\n\n    // ---------------------------------------------\n    //   Instance block\n    // ---------------------------------------------\n    return { };\n  }\n\n  // ---------------------------------------------\n  //   Export block\n  // ---------------------------------------------\n  module.exports = ClickableTile;\n\n})(jQuery);\n\n\n},{\"../base/query\":6}]},{},[1]);\n"],"file":"app.min.js"}